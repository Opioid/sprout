* Backlog

** Integrators

*** TODO Subsurface scattering
- [X] Implement single scattering 
- [ ] Implement multiple scattering
  - [ ] Monte-carlo integrator
  - [ ] Next event estimation

** Materials

*** TODO Cloth material
- [ ] Investigate dedicated cloth material with alternative BRDF (e.g. Ashikhmin)

*** TODO Separate samplers
- [ ] Consider adding support for separate samplers per texture

** Shapes

*** TODO Adding/improving analytical shapes
- [-] Canopy/Half-sphere
  - [X] Intersection
  - [ ] UV sampling
- [ ] Cylinder

** Build system

*** TODO cmake-based build system

** Resources

*** TODO Faster file loading
- [ ] Consider concurrent loading during lengthy processing steps (e.g. building BVH)
- [ ] Consider embedding json and binary data in single file

** Renderer

*** TODO Lock-free tile enumeration
- [X] Pre-determined "Tiled scanline" with initial offset (slower)
- [ ] +Space filling curve (e.g. z-curve or hilbert-curve)+
- [ ] Atomics for access to next tile

It seems that the mutex communication is not the bottleneck in this scenario. 
Something with atomics might be interesting, but will probably not affect overall performance.
